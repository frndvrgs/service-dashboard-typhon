name: Elastic Beanstalk CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm ci

    - name: Run circular dependencies check
      run: npm run dpdm

    - name: Run tests
      run: npm run test

    - name: Build
      run: npm run build

    - name: Get package version
      id: package-version
      run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

    - name: Generate deployment packages
      run: |
        zip -r "deploy-${{ github.event.repository.name }}-${{ steps.package-version.outputs.version }}.zip" . -x '*.git*'
        tar --exclude='./.git' -czf "deploy-${{ github.event.repository.name }}-${{ steps.package-version.outputs.version }}.tar.gz" .

    - name: Deploy to AWS EB
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ secrets.EB_APPLICATION_NAME }}
        environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
        version_label: "${{ github.event.repository.name }}-${{ steps.package-version.outputs.version }}-${{ github.sha }}"
        region: ${{ secrets.AWS_REGION }}
        deployment_package: "deploy-${{ github.event.repository.name }}-${{ steps.package-version.outputs.version }}.zip"

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: deploy-packages
        path: |
          deploy-${{ github.event.repository.name }}-${{ steps.package-version.outputs.version }}.zip
          deploy-${{ github.event.repository.name }}-${{ steps.package-version.outputs.version }}.tar.gz